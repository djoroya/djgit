{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"djgit","text":"<p>Creaci\u00f3n de la carpeta de scripts Primero, crea una carpeta llamada scripts en el directorio ra\u00edz de tu proyecto:</p> <pre><code>mkdir scripts\n</code></pre> <p>Luego, dentro de la carpeta scripts, crea un archivo Python llamado deploy.py con el siguiente contenido:</p> <pre><code>import os\nfrom djgit.deploy import deploy\n</code></pre>"},{"location":"#especifica-la-carpeta-de-destino-partiendo-desde-el-directorio-raiz-del-proyecto","title":"Especifica la carpeta de destino, partiendo desde el directorio ra\u00edz del proyecto","text":"<pre><code>target_folder = os.path.join('src', 'dev', 'trial')  \ndeploy(target_folder)\n</code></pre> <p>En este ejemplo, target_folder es la ruta donde se ubica el c\u00f3digo que deseas desplegar. Debes ajustarla seg\u00fan la estructura de tu proyecto.</p> <p>Ejecuci\u00f3n del despliegue Para desplegar el proyecto, ejecuta el siguiente comando en la terminal:</p> <pre><code>python scripts/deploy.py\n</code></pre> <p>Al ejecutar este comando, se crear\u00e1 una nueva carpeta llamada .repo_deploy dentro del directorio del proyecto. Esta carpeta contendr\u00e1 el c\u00f3digo preparado para ser enviado a un nuevo branch en tu sistema de control de versiones, denominado \"deploy\".</p> <p>Instalaci\u00f3n de la librer\u00eda en un nuevo proyecto Si deseas instalar esta librer\u00eda en otro proyecto, puedes hacerlo agregando la siguiente l\u00ednea en tu archivo requirements.txt o ejecutando el comando pip install con la siguiente sintaxis:</p> <pre><code>djgit @ git+https://github.com/USERNAME/REPO_NAME.git@deploy\n</code></pre> <p>Aseg\u00farate de reemplazar USERNAME y REPO_NAME con el nombre de usuario y el nombre del repositorio correspondientes en GitHub.</p>"},{"location":"__init__/","title":"<code>__init__</code>","text":"<p>Source: <code>__init__.py</code></p> <p>Auto-generated by <code>py2md_docs.py</code>.</p>"},{"location":"addpath/","title":"<code>addpath</code>","text":"<p>Source: <code>addpath.py</code></p>"},{"location":"addpath/#functions","title":"Functions","text":""},{"location":"addpath/#addpath-none","title":"<code>addpath() -&gt; None</code>","text":"<p>Import: <code>from addpath.addpath import addpath</code></p> <p>Main function that parses command-line arguments and calls <code>addpath_python()</code> with the provided path.</p>"},{"location":"addpath/#addpath_pythonpath-none","title":"<code>addpath_python(path) -&gt; None</code>","text":"<p>Import: <code>from addpath.addpath_python import addpath_python</code></p> Section Description Description          Adds a custom path to Python's search path (<code>sys.path</code>) by creating or updating a         <code>.pth</code> file inside the active environment's <code>site-packages</code> directory.         This allows modules in non-standard locations to be imported without setting         environment variables every session.        Inputs <code>--path</code> (str): Absolute or relative path to add to the PYTHONPATH.        Outputs          None (prints status messages to stdout and updates the <code>conda.pth</code> file).        Example Usage <pre><code># Add a local library folder to Python path\npython addpath.py --path ./libs\n\n# Add an absolute path\npython addpath.py --path /home/user/dev/my_module\n</code></pre> Notes <ul> <li>The <code>.pth</code> file is created in the first <code>site-packages</code> found in <code>sys.path</code>.</li> <li>If the path already exists in the file, it will not be duplicated.</li> </ul> <p>Auto-generated by <code>py2md_docs.py</code>.</p>"},{"location":"copylibs/","title":"<code>copylibs</code>","text":"<p>Source: <code>copylibs.py</code></p>"},{"location":"copylibs/#functions","title":"Functions","text":""},{"location":"copylibs/#main","title":"<code>main()</code>","text":"<p>Import: <code>from copylibs.main import main</code></p> <p>Auto-generated by <code>py2md_docs.py</code>.</p>"},{"location":"deploy/","title":"<code>deploy</code>","text":"<p>Source: <code>deploy.py</code></p>"},{"location":"deploy/#functions","title":"Functions","text":""},{"location":"deploy/#deploytarget_folder-package_data","title":"<code>deploy(target_folder, package_data={})</code>","text":"<p>Import: <code>from deploy.deploy import deploy</code></p> <p>Auto-generated by <code>py2md_docs.py</code>.</p>"},{"location":"npm_deploy/","title":"<code>npm_deploy</code>","text":"<p>Source: <code>npm_deploy.py</code></p>"},{"location":"npm_deploy/#functions","title":"Functions","text":""},{"location":"npm_deploy/#create_package_jsonpath-repo_name-target_pathrepo_deploy","title":"<code>create_package_json(path, repo_name, target_path='.repo_deploy')</code>","text":"<p>Import: <code>from npm_deploy.create_package_json import create_package_json</code></p>"},{"location":"npm_deploy/#npm_deploy_1","title":"<code>npm_deploy()</code>","text":"<p>Import: <code>from npm_deploy.npm_deploy import npm_deploy</code></p> <p>Auto-generated by <code>py2md_docs.py</code>.</p>"},{"location":"py2md_docs/","title":"<code>py2md_docs</code>","text":"<p>Source: <code>py2md_docs.py</code></p>"},{"location":"py2md_docs/#overview","title":"Overview","text":"<p>py2md_docs.py</p> <p>1) Recorre un \u00e1rbol de Python y genera Markdown por m\u00f3dulo. 2) Actualiza autom\u00e1ticamente <code>mkdocs.yml</code> para incluir la referencia generada.</p> <p>Uso:   python tools/py2md_docs.py --src src --out docs/reference --mkdocs mkdocs.yml       --section \"Referencia\" --group \"API\" --include-comments</p>"},{"location":"py2md_docs/#classes","title":"Classes","text":""},{"location":"py2md_docs/#classdoc","title":"<code>ClassDoc</code>","text":""},{"location":"py2md_docs/#functiondoc","title":"<code>FunctionDoc</code>","text":""},{"location":"py2md_docs/#moduledoc","title":"<code>ModuleDoc</code>","text":""},{"location":"py2md_docs/#functions","title":"Functions","text":""},{"location":"py2md_docs/#generate_docssrc_dir-out_dir-include_comments-mirror_tree-listpath","title":"<code>generate_docs(src_dir, out_dir, include_comments, mirror_tree) -&gt; List[Path]</code>","text":"<p>Import: <code>from py2md_docs.generate_docs import generate_docs</code></p>"},{"location":"py2md_docs/#main","title":"<code>main()</code>","text":"<p>Import: <code>from py2md_docs.main import main</code></p>"},{"location":"py2md_docs/#md_for_modulem-include_commentsfalse-str","title":"<code>md_for_module(m, include_comments=False) -&gt; str</code>","text":"<p>Import: <code>from py2md_docs.md_for_module import md_for_module</code></p>"},{"location":"py2md_docs/#parse_modulepy_path-src_root-moduledoc","title":"<code>parse_module(py_path, src_root) -&gt; ModuleDoc</code>","text":"<p>Import: <code>from py2md_docs.parse_module import parse_module</code></p>"},{"location":"py2md_docs/#update_mkdocs_yamlmkdocs_path-docs_root-md_files-top_sectionreferencia-subgroupapi-none","title":"<code>update_mkdocs_yaml(mkdocs_path, docs_root, md_files, top_section='Referencia', subgroup='API') -&gt; None</code>","text":"<p>Import: <code>from py2md_docs.update_mkdocs_yaml import update_mkdocs_yaml</code></p> <p>Auto-generated by <code>py2md_docs.py</code>.</p>"},{"location":"tools/","title":"<code>tools</code>","text":"<p>Source: <code>tools.py</code></p>"},{"location":"tools/#functions","title":"Functions","text":""},{"location":"tools/#clonar_deploy_branchrepo_url","title":"<code>clonar_deploy_branch(repo_url)</code>","text":"<p>Import: <code>from tools.clonar_deploy_branch import clonar_deploy_branch</code></p>"},{"location":"tools/#create_deploy_branchrepo_url","title":"<code>create_deploy_branch(repo_url)</code>","text":"<p>Import: <code>from tools.create_deploy_branch import create_deploy_branch</code></p>"},{"location":"tools/#createsetuprepo_name-package_data","title":"<code>createsetup(repo_name, package_data={})</code>","text":"<p>Import: <code>from tools.createsetup import createsetup</code></p>"},{"location":"tools/#get_repo_name","title":"<code>get_repo_name()</code>","text":"<p>Import: <code>from tools.get_repo_name import get_repo_name</code></p>"},{"location":"tools/#list_remote_branchesrepo_url","title":"<code>list_remote_branches(repo_url)</code>","text":"<p>Import: <code>from tools.list_remote_branches import list_remote_branches</code></p> <p>Auto-generated by <code>py2md_docs.py</code>.</p>"},{"location":"guia/intro/","title":"djgit","text":"<p>Creaci\u00f3n de la carpeta de scripts Primero, crea una carpeta llamada scripts en el directorio ra\u00edz de tu proyecto:</p> <pre><code>mkdir scripts\n</code></pre> <p>Luego, dentro de la carpeta scripts, crea un archivo Python llamado deploy.py con el siguiente contenido:</p> <pre><code>import os\nfrom djgit.deploy import deploy\n</code></pre>"},{"location":"guia/intro/#especifica-la-carpeta-de-destino-partiendo-desde-el-directorio-raiz-del-proyecto","title":"Especifica la carpeta de destino, partiendo desde el directorio ra\u00edz del proyecto","text":"<pre><code>target_folder = os.path.join('src', 'dev', 'trial')  \ndeploy(target_folder)\n</code></pre> <p>En este ejemplo, target_folder es la ruta donde se ubica el c\u00f3digo que deseas desplegar. Debes ajustarla seg\u00fan la estructura de tu proyecto.</p> <p>Ejecuci\u00f3n del despliegue Para desplegar el proyecto, ejecuta el siguiente comando en la terminal:</p> <pre><code>python scripts/deploy.py\n</code></pre> <p>Al ejecutar este comando, se crear\u00e1 una nueva carpeta llamada .repo_deploy dentro del directorio del proyecto. Esta carpeta contendr\u00e1 el c\u00f3digo preparado para ser enviado a un nuevo branch en tu sistema de control de versiones, denominado \"deploy\".</p> <p>Instalaci\u00f3n de la librer\u00eda en un nuevo proyecto Si deseas instalar esta librer\u00eda en otro proyecto, puedes hacerlo agregando la siguiente l\u00ednea en tu archivo requirements.txt o ejecutando el comando pip install con la siguiente sintaxis:</p> <pre><code>djgit @ git+https://github.com/USERNAME/REPO_NAME.git@deploy\n</code></pre> <p>Aseg\u00farate de reemplazar USERNAME y REPO_NAME con el nombre de usuario y el nombre del repositorio correspondientes en GitHub.</p>"}]}